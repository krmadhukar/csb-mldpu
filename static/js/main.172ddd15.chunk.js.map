{"version":3,"sources":["UserSearch.js","App.js","index.js"],"names":["UserTable","users","console","log","length","Table","striped","bordered","hover","map","ele","id","name","username","email","App","useState","setUsers","userTableData","changeTableData","search","changeValue","fetchUsers","a","fetch","json","userList","useEffect","filter","str","toUpperCase","includes","className","type","value","onChange","e","target","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2PA8BeA,EA7BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEnB,OADAC,QAAQC,IAAIF,GACW,GAAhBA,EAAMG,OACX,0CAEA,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oCACA,sCACA,0CACA,4CAGJ,gCACGP,EAAMQ,KAAI,SAACC,GACV,OACE,+BACE,6BAAKA,EAAIC,KACT,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,WACT,6BAAKH,EAAII,UAJFJ,EAAIC,aCdV,SAASI,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAAyCD,mBAAS,IAAlD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAeC,EAAf,KACMC,EAAU,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,8CADT,cACXvB,EADW,gBAEMA,EAAMwB,OAFZ,OAEXC,EAFW,OAGjBT,EAASS,GACTP,EAAgBO,GAJC,2CAAH,qDAqBhB,OAfAC,qBAAU,WACRR,EACElB,EAAM2B,QAAO,SAAClB,GACZ,IAAMmB,EAAMT,EAAOU,cACnB,OACEpB,EAAIE,KAAKkB,cAAcC,SAASF,IAChCnB,EAAIG,SAASiB,cAAcC,SAASF,IACpCnB,EAAII,MAAMgB,cAAcC,SAASF,SAItC,CAACT,EAAQnB,IACZ0B,qBAAU,WACRL,MACC,IAED,sBAAKU,UAAU,MAAf,UACE,gCACE,2CACA,uBACEC,KAAK,OACLC,MAAOd,EACPe,SAAU,SAACC,GACTf,EAAYe,EAAEC,OAAOH,aAI3B,uBACA,cAAC,EAAD,CAAWjC,MAAOiB,OCrCxB,IAAMoB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC3B,EAAD,MAEFuB,K","file":"static/js/main.172ddd15.chunk.js","sourcesContent":["import { Table } from \"react-bootstrap\";\nconst UserTable = ({ users }) => {\n  console.log(users);\n  return users.length == 0 ? (\n    <div>Loading</div>\n  ) : (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>id</th>\n          <th>Name</th>\n          <th>UserName</th>\n          <th>email</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((ele) => {\n          return (\n            <tr key={ele.id}>\n              <td>{ele.id}</td>\n              <td>{ele.name}</td>\n              <td>{ele.username}</td>\n              <td>{ele.email}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\nexport default UserTable;\n","import { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UserTable from \"./UserSearch\";\nexport default function App() {\n  const [users, setUsers] = useState([]);\n  const [userTableData, changeTableData] = useState([]);\n  const [search, changeValue] = useState(\"\");\n  const fetchUsers = async () => {\n    const users = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const userList = await users.json();\n    setUsers(userList);\n    changeTableData(userList);\n  };\n  useEffect(() => {\n    changeTableData(\n      users.filter((ele) => {\n        const str = search.toUpperCase();\n        return (\n          ele.name.toUpperCase().includes(str) ||\n          ele.username.toUpperCase().includes(str) ||\n          ele.email.toUpperCase().includes(str)\n        );\n      })\n    );\n  }, [search, users]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return (\n    <div className=\"App\">\n      <div>\n        <label>Search</label>\n        <input\n          type=\"text\"\n          value={search}\n          onChange={(e) => {\n            changeValue(e.target.value);\n          }}\n        />\n      </div>\n      <br />\n      <UserTable users={userTableData} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}